{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido al Proyecto de Modelos Probabil\u00edsticos Participantes del Proyecto de modelos Cristian Vega Romero Andres Yohel Este proyecto busca, mediante los datos de una estaci\u00f3n meteorol\u00f3gica propiedad del laboratorio LabCES (Laboratorio de Investigaci\u00f3n en Conversi\u00f3n de la Energ\u00eda para la Sustentabilidad), colocada en el techo del edificio de Ingenier\u00eda El\u00e9ctrica, conocer la radiaci\u00f3n solar producida de forma diaria y su posible uso para la creaci\u00f3n de una microrred. Para este objetivo, se deben llevar a cabo modelos predictivos con el fin de no ver limitado el uso de la electricidad para las funciones diarias en el laboratorio. Pagina del laboratorio","title":"inicio"},{"location":"#bienvenido-al-proyecto-de-modelos-probabilisticos","text":"","title":"Bienvenido al Proyecto de Modelos Probabil\u00edsticos"},{"location":"#participantes-del-proyecto-de-modelos","text":"Cristian Vega Romero Andres Yohel Este proyecto busca, mediante los datos de una estaci\u00f3n meteorol\u00f3gica propiedad del laboratorio LabCES (Laboratorio de Investigaci\u00f3n en Conversi\u00f3n de la Energ\u00eda para la Sustentabilidad), colocada en el techo del edificio de Ingenier\u00eda El\u00e9ctrica, conocer la radiaci\u00f3n solar producida de forma diaria y su posible uso para la creaci\u00f3n de una microrred. Para este objetivo, se deben llevar a cabo modelos predictivos con el fin de no ver limitado el uso de la electricidad para las funciones diarias en el laboratorio. Pagina del laboratorio","title":"Participantes del Proyecto de modelos"},{"location":"Contexto/","text":"Contexto del documento #hola","title":"Contexto"},{"location":"Contexto/#contexto-del-documento","text":"#hola","title":"Contexto del documento"},{"location":"datos/","text":"# Datos","title":"Recopilaicon de datos"},{"location":"estadisticas/","text":"Esta","title":"Estadisticas descriptivas de los datos"},{"location":"estadisticas/#esta","text":"","title":"Esta"},{"location":"modelos/","text":"Introducci\u00f3n En este documento se presenta un an\u00e1lisis probabil\u00edstico de datos de radiaci\u00f3n solar usando Python. Importaci\u00f3n de Librer\u00edas ```python import pandas as pd import numpy as np import scipy.stats as stats import statsmodels.api as sm import matplotlib.pyplot as plt Leer el archivo .xls file_path = '/home/andres/Downloads/Datos 15 de 13_30 a 14_30.xls' df = pd.read_excel(file_path) Extrae las columnas espec\u00edficas date_hour_column = \"Unnamed: 4\" solar_radiation_column = \"Unnamed: 23\" Limpia el DataFrame para que s\u00f3lo contenga las dos columnas deseadas data = df[[date_hour_column, solar_radiation_column]].dropna() Ignorar los primeros dos valores de cada columna data = data.iloc[1:] Convertir la columna de fecha y hora al formato datetime data[date_hour_column] = pd.to_datetime(data[date_hour_column], format='%y/%m/%d %H:%M:%S') Extraer la fecha y los segundos del d\u00eda data['Fecha'] = data[date_hour_column].dt.strftime('%y/%m/%d') data data[date_hour_column] = pd.to_datetime(data[date_hour_column], format='%y/%m/%d %H:%M:%S') Extraer la fecha y los segundos del d\u00eda data['Fecha'] = data[date_hour_column].dt.strftime('%y/%m/%d') data['Segundos del d\u00eda'] = data[date_hour_column].dt.hour * 3600 + data[date_hour_column].dt.minute * 60 + data[date_hour_column].dt.second tiempo = data['Segundos del d\u00eda'].values.astype(float) # Asegurar que tiempo sea float radiacion_solar = data[solar_radiation_column].values.astype(float) # Asegurar que radiacion_solar sea float C\u00e1lculo de la covarianza covarianza = np.cov(tiempo, radiacion_solar)[0, 1] C\u00e1lculo de la media y promedio de la radiaci\u00f3n solar media_radiacion_solar = np.mean(radiacion_solar) promedio_radiacion_solar = np.average(radiacion_solar) C\u00e1lculo de la curtosis curtosis_radiacion_solar = stats.kurtosis(radiacion_solar) Crear un modelo de regresi\u00f3n lineal X = sm.add_constant(tiempo) # Agregar una columna de unos para el t\u00e9rmino constante model = sm.OLS(radiacion_solar, X).fit() Resultados del modelo summary = model.summary() Visualizaci\u00f3n de resultados plt.figure(figsize=(12, 8)) plt.subplot(2, 2, 1) plt.scatter(tiempo, radiacion_solar, alpha=0.5) plt.title('Radiaci\u00f3n solar vs. Tiempo') plt.xlabel('Segundos del d\u00eda') plt.ylabel('Radiaci\u00f3n solar [W/m\u00b2]') plt.plot(tiempo, model.predict(X), color='red', linewidth=2) Otros gr\u00e1ficos y visualizaciones ... plt.tight_layout() plt.show()","title":"Modelos de los datos implementaci\u00f3n en python"},{"location":"modelos/#introduccion","text":"En este documento se presenta un an\u00e1lisis probabil\u00edstico de datos de radiaci\u00f3n solar usando Python.","title":"Introducci\u00f3n"},{"location":"modelos/#importacion-de-librerias","text":"```python import pandas as pd import numpy as np import scipy.stats as stats import statsmodels.api as sm import matplotlib.pyplot as plt","title":"Importaci\u00f3n de Librer\u00edas"},{"location":"modelos/#leer-el-archivo-xls","text":"file_path = '/home/andres/Downloads/Datos 15 de 13_30 a 14_30.xls' df = pd.read_excel(file_path)","title":"Leer el archivo .xls"},{"location":"modelos/#extrae-las-columnas-especificas","text":"date_hour_column = \"Unnamed: 4\" solar_radiation_column = \"Unnamed: 23\"","title":"Extrae las columnas espec\u00edficas"},{"location":"modelos/#limpia-el-dataframe-para-que-solo-contenga-las-dos-columnas-deseadas","text":"data = df[[date_hour_column, solar_radiation_column]].dropna()","title":"Limpia el DataFrame para que s\u00f3lo contenga las dos columnas deseadas"},{"location":"modelos/#ignorar-los-primeros-dos-valores-de-cada-columna","text":"data = data.iloc[1:]","title":"Ignorar los primeros dos valores de cada columna"},{"location":"modelos/#convertir-la-columna-de-fecha-y-hora-al-formato-datetime","text":"data[date_hour_column] = pd.to_datetime(data[date_hour_column], format='%y/%m/%d %H:%M:%S')","title":"Convertir la columna de fecha y hora al formato datetime"},{"location":"modelos/#extraer-la-fecha-y-los-segundos-del-dia","text":"data['Fecha'] = data[date_hour_column].dt.strftime('%y/%m/%d') data data[date_hour_column] = pd.to_datetime(data[date_hour_column], format='%y/%m/%d %H:%M:%S')","title":"Extraer la fecha y los segundos del d\u00eda"},{"location":"modelos/#extraer-la-fecha-y-los-segundos-del-dia_1","text":"data['Fecha'] = data[date_hour_column].dt.strftime('%y/%m/%d') data['Segundos del d\u00eda'] = data[date_hour_column].dt.hour * 3600 + data[date_hour_column].dt.minute * 60 + data[date_hour_column].dt.second tiempo = data['Segundos del d\u00eda'].values.astype(float) # Asegurar que tiempo sea float radiacion_solar = data[solar_radiation_column].values.astype(float) # Asegurar que radiacion_solar sea float","title":"Extraer la fecha y los segundos del d\u00eda"},{"location":"modelos/#calculo-de-la-covarianza","text":"covarianza = np.cov(tiempo, radiacion_solar)[0, 1]","title":"C\u00e1lculo de la covarianza"},{"location":"modelos/#calculo-de-la-media-y-promedio-de-la-radiacion-solar","text":"media_radiacion_solar = np.mean(radiacion_solar) promedio_radiacion_solar = np.average(radiacion_solar)","title":"C\u00e1lculo de la media y promedio de la radiaci\u00f3n solar"},{"location":"modelos/#calculo-de-la-curtosis","text":"curtosis_radiacion_solar = stats.kurtosis(radiacion_solar)","title":"C\u00e1lculo de la curtosis"},{"location":"modelos/#crear-un-modelo-de-regresion-lineal","text":"X = sm.add_constant(tiempo) # Agregar una columna de unos para el t\u00e9rmino constante model = sm.OLS(radiacion_solar, X).fit()","title":"Crear un modelo de regresi\u00f3n lineal"},{"location":"modelos/#resultados-del-modelo","text":"summary = model.summary()","title":"Resultados del modelo"},{"location":"modelos/#visualizacion-de-resultados","text":"plt.figure(figsize=(12, 8)) plt.subplot(2, 2, 1) plt.scatter(tiempo, radiacion_solar, alpha=0.5) plt.title('Radiaci\u00f3n solar vs. Tiempo') plt.xlabel('Segundos del d\u00eda') plt.ylabel('Radiaci\u00f3n solar [W/m\u00b2]') plt.plot(tiempo, model.predict(X), color='red', linewidth=2)","title":"Visualizaci\u00f3n de resultados"},{"location":"modelos/#otros-graficos-y-visualizaciones","text":"plt.tight_layout() plt.show()","title":"Otros gr\u00e1ficos y visualizaciones ..."}]}